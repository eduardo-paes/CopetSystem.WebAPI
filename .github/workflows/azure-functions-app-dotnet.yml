name: Deploy WebFunctions to Azure

on:
  push:
    branches: ["production"]

env:
  AZURE_FUNCTIONAPP_NAME: "GPIC-Stg-WebFunctions" # set this to your function app name on Azure
  AZURE_FUNCTIONAPP_PACKAGE_PATH: "src" # set this to the path to your function app project, defaults to the repository root
  DOTNET_VERSION: "7.0" # set this to the dotnet version to use (e.g. '2.1.x', '3.1.x', '5.0.x')

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest # For Linux, use ubuntu-latest
    environment: dev
    steps:
      - name: "Checkout GitHub Action"
        uses: actions/checkout@v3

      - name: Setup DotNet ${{ env.DOTNET_VERSION }} Environment
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      - name: "Resolve Project Dependencies Using Dotnet"
        shell: bash # For Linux, use bash
        run: |
          pushd './${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}'
          dotnet build --configuration Release --output ./output
          popd

      - name: Create env
        run: |
          echo "AZURE_BLOB_STORAGE_CONNECTION_STRING=${{ secrets.AZURE_BLOB_STORAGE_CONNECTION_STRING }}
          AZURE_BLOB_STORAGE_CONTAINER_NAME=${{ secrets.AZURE_BLOB_STORAGE_CONTAINER_NAME }}
          POSTGRES_CONNECTION_STRING=${{ secrets.POSTGRES_CONNECTION_STRING }}
          FRONTEND_URL=${{ secrets.FRONTEND_URL }}
          ALLOW_ORIGINS=${{ secrets.ALLOW_ORIGINS }}
          JWT_AUDIENCE=${{ secrets.JWT_AUDIENCE }}
          JWT_EXPIRE_IN=${{ secrets.JWT_EXPIRE_IN }}
          JWT_ISSUER=${{ secrets.JWT_ISSUER }}
          JWT_SECRET_KEY=${{ secrets.JWT_SECRET_KEY }}
          SEQ_API_KEY=${{ secrets.SEQ_API_KEY }}
          SEQ_URL=${{ secrets.SEQ_URL }}
          SMTP_EMAIL_PASSWORD=${{ secrets.SMTP_EMAIL_PASSWORD }}
          SMTP_EMAIL_USERNAME=${{ secrets.SMTP_EMAIL_USERNAME }}
          EXECUTE_MIGRATION=${{ secrets.EXECUTE_MIGRATION }}" > src/Infrastructure/WebAPI/.env

      - name: "Run Azure Functions Action"
        uses: Azure/functions-action@v1
        id: fa
        with:
          app-name: ${{ env.AZURE_FUNCTIONAPP_NAME }}
          package: "${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}/output"
          publish-profile: ${{ secrets.AZURE_FUNCTIONAPP_PUBLISH_PROFILE }} # Remove publish-profile to use Azure RBAC
